{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/movie-card/movie-card.component.css","webpack:///./src/app/components/movie-card/movie-card.component.html","webpack:///./src/app/components/movie-card/movie-card.component.ts","webpack:///./src/app/pages/details/details.component.css","webpack:///./src/app/pages/details/details.component.html","webpack:///./src/app/pages/details/details.component.ts","webpack:///./src/app/pages/list/list.component.css","webpack:///./src/app/pages/list/list.component.html","webpack:///./src/app/pages/list/list.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<ul>\\n  <li><a routerLink='/'>Home</a></li>\\n  <li><a routerLink='list'>List</a></li>\\n</ul>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { DataService } from './services/data.service';\n\nimport { MovieCardComponent } from './components/movie-card/movie-card.component';\nimport { ListComponent } from './pages/list/list.component';\nimport { DetailsComponent } from './pages/details/details.component';\n\nconst appRoutes: Routes = [\n  { path:'list', component: ListComponent },\n  { path:'detail', component: DetailsComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    MovieCardComponent,\n    DetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".movie-card {\\r\\n    display: flex;\\r\\n    flex-flow: row nowrap;\\r\\n\\r\\n    overflow: hidden;\\r\\n\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n\\r\\n    margin: 15px 0;\\r\\n}\\r\\n\\r\\n.body {\\r\\n    padding: 0 15px;\\r\\n}\\r\\n\\r\\n.title .small {\\r\\n    font-size: .7em;\\r\\n\\r\\n    color: #666;\\r\\n}\"","module.exports = \"<div class=\\\"movie-card\\\">\\n  <img class='poster' src=\\\"{{data.getPosterPath(movie.poster_path,1)}}\\\" alt=\\\"{{movie.title}}: {{movie.tagline}}\\\">\\n  <div class='body'>\\n    <h3 class=\\\"title\\\">\\n      {{movie.title}}\\n      <br>\\n      <span class=\\\"small\\\">{{movie.release_date}}</span>\\n    </h3>\\n    <p>{{movie.overview}}</p>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Movie } from '../../interfaces/movie';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.css']\n})\nexport class MovieCardComponent implements OnInit {\n\n  @Input() movie:Movie;\n\n  constructor(private data:DataService) { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  details works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (submit)=\\\"onSearch()\\\">\\n  <input type=\\\"text\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"query\\\" name=\\\"query\\\">\\n  <button type=\\\"submit\\\">procurar</button>\\n</form>\\n\\n<div *ngFor=\\\"let movie of movies\\\">\\n  <app-movie-card [movie]=\\\"movie\\\"></app-movie-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { Movie } from '../../interfaces/movie';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  query:string = '';\n\n  movies:Movie[];\n\n  constructor\n    ( private source:DataService\n    , private response:ActivatedRoute\n    , private router:Router\n    ) { }\n\n  ngOnInit() {\n    this.response.queryParams.subscribe(data => {\n      this.query = data.q;\n\n      this.source.getSearchResult(this.query).subscribe(data => {\n        this.movies = data.json().results;\n      });\n    });\n  }\n\n  onSearch(){\n      this.router.navigate(['/list'], { queryParams: { 'q': this.query } })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Movie } from '../interfaces/movie';\nimport { TMDbConfig } from '../interfaces/tmdb-config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService implements TMDbConfig {\n  images: { base_url: string; secure_base_url: string; backdrop_sizes: string[]; logo_sizes: string[]; poster_sizes: string[]; profile_sizes: string[]; still_sizes: string[]; };\n  change_keys: string[];\n\n  apiEndpoint:string = 'https://api.themoviedb.org/3/';\n  apiKey:string = '6d132c5f70b936ab288082a9ca3522f1';\n\n  constructor(public http:Http) {\n    let raw = this.http.get(`https://api.themoviedb.org/3/configuration?api_key=${this.apiKey}`).toPromise();\n    raw.then(data => {\n      let json = data.json();\n      this.images = json.images;\n      this.change_keys = json.change_keys;\n    });\n  }\n\n  getSearchResult(search){\n    return this.http.get(`${this.apiEndpoint}search/movie?api_key=${this.apiKey}&query=${search}`);\n  }\n\n  getData(){\n    return this.http.get(`${this.apiEndpoint}movie/76341?api_key=${this.apiKey}&language=pt-BR`);\n  }\n\n  getPosterPath(image: string, sizeIndex: number = 0): string{\n    return `${this.images.secure_base_url}${this.images.poster_sizes[sizeIndex]}${image}`;\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}